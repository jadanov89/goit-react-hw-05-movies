{"version":3,"file":"static/js/33.ec5e886f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MoviePosterImage = styled.img`\n  display: block;\n  width: 300px;\n  height: auto;\n  border-radius: 8px;\n`;\n\nexport const DetailsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 15px;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin-left: 20px;\n`;\n\nexport const GenresWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const MovieGenre = styled.p`\n  margin-right: 10px;\n  padding: 5px;\n  border-radius: 4px;\n  color: white;\n  background-color: black;\n  width: 120px;\n  text-align: center;\n  margin-bottom: 0px;\n  margin-top: 10px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  display: block;\n  color: black;\n  border-radius: 6px;\n  border: 1px solid orangered;\n  width: 120px;\n  margin-right: 15px;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover: not(.active) {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const InfoLinksList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 500px;\n  list-style: none;\n  margin-bottom: 30px;\n`;\n\nexport const GenresTitle = styled.h3`\n  margin-bottom: 0px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  display: block;\n  color: black;\n  border-radius: 6px;\n  border: 1px solid orangered;\n  width: 120px;\n  margin-right: 15px;\n  margin-top: 15px &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover: not(.active) {\n    color: white;\n    background-color: orangered;\n  }\n`;","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieByID } from '../../Services/GetMovies';\n\nimport {\n  MoviePosterImage,\n  DetailsWrapper,\n  InfoWrapper,\n  GenresWrapper,\n  MovieGenre,\n  InfoLink,\n  InfoLinksList,\n  GenresTitle,\n  BackLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  useEffect(() => {\n    getMovieByID(Number(movieId)).then(movie => setMovieInfo(movie.data));\n  }, [movieId]);\n\n  const makeMovieDate = date => {\n    const fitDate = date.slice(0, 4);\n    return fitDate;\n  };\n\n  const backLinkRef = location.state?.from ?? '/';\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  return (\n    <>\n      <DetailsWrapper>\n        <MoviePosterImage\n          src={`https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`}\n          alt=\"\"\n        />\n        <InfoWrapper>\n          <h2>{`${movieInfo.title} (${makeMovieDate(\n            movieInfo.release_date\n          )})`}</h2>\n          <p>\n            User score: {((movieInfo.vote_average / 10) * 100).toFixed(0)} %\n          </p>\n          <h3>Overveiw:</h3>\n          <p>{movieInfo.overview}</p>\n          <GenresTitle>Genres:</GenresTitle>\n          <GenresWrapper>\n            {movieInfo.genres.map(genre => (\n              <MovieGenre key={genre.id}>{genre.name}</MovieGenre>\n            ))}\n          </GenresWrapper>\n          <BackLink to={backLinkRef}>Go back</BackLink>\n        </InfoWrapper>\n      </DetailsWrapper>\n      <div>\n        <InfoLinksList>\n          <li>\n            <InfoLink to=\"cast\" state={{ from: backLinkRef }}>\n              Cast\n            </InfoLink>\n          </li>\n          <li>\n            <InfoLink to=\"reviews\" state={{ from: backLinkRef }}>\n              Reviews\n            </InfoLink>\n          </li>\n        </InfoLinksList>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["MoviePosterImage","styled","_templateObject","_taggedTemplateLiteral","DetailsWrapper","_templateObject2","InfoWrapper","_templateObject3","GenresWrapper","_templateObject4","MovieGenre","_templateObject5","InfoLink","NavLink","_templateObject6","InfoLinksList","_templateObject7","GenresTitle","_templateObject8","BackLink","Link","_templateObject9","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","useEffect","getMovieByID","Number","then","movie","data","date","backLinkRef","state","from","_jsxs","_Fragment","children","_jsx","src","concat","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","id","to","Outlet"],"sourceRoot":""}