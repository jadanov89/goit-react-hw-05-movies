{"version":3,"file":"static/js/206.49c8be82.chunk.js","mappings":"iQACaA,EAAcC,EAAAA,EAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mKAU1BC,EAAeH,EAAAA,EAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yTAkB5BG,EAAaL,EAAAA,EAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mJ,SCzBxBK,EAAY,SAAHC,GAAuB,IAAjBC,EAASD,EAATC,UAC1BC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAiBlC,OACEI,EAAAA,EAAAA,MAACX,EAAU,CAACY,SAbO,SAAAC,GACnBA,EAAMC,iBAEqB,KAAvBL,EAAYM,SAIhBX,EAAUK,GAEVC,EAAe,IACjB,EAGqCM,SAAA,EACjCC,EAAAA,EAAAA,KAACvB,EAAW,CACVwB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZC,MAAOb,EACPc,SAxBoB,SAAAV,GACxBH,EAAeG,EAAMW,cAAcF,MAAMG,cAC3C,KAwBIR,EAAAA,EAAAA,KAACnB,EAAY,CAACoB,KAAK,SAAQF,SAAC,aAGlC,EChCaU,EAAa/B,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAMtB8B,EAAiBhC,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kCAI1B+B,GAAiBjC,EAAAA,EAAAA,GAAOkC,EAAAA,GAAPlC,CAAeM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iXCmC7C,EA1Ce,WAAO,IAADiC,EACnBzB,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD0B,EAAcxB,EAAA,GAAEyB,EAAiBzB,EAAA,GACxC0B,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAA3B,EAAAA,EAAAA,GAAAyB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAqC,QAA5BR,EAAGM,EAAaG,IAAI,gBAAQ,IAAAT,EAAAA,EAAI,GACzCU,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,GAKLK,EAAAA,EAAAA,IAAgBL,GAAWM,MAAK,SAAAC,GAC9Bb,EAAkBa,EAAOC,KAAKC,QAChC,IANEf,EAAkB,GAOtB,GAAG,CAACM,IAMJ,OACE3B,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACf,EAAS,CAACE,UANG,SAAAkB,GAChBe,EAA0B,KAAVf,EAAe,CAAE0B,MAAO1B,GAAU,CAAC,EACrD,IAKKS,EAAekB,OAAS,IACvBhC,EAAAA,EAAAA,KAACS,EAAU,CAAAV,SACRe,EAAemB,KAAI,SAAAC,GAAK,OACvBlC,EAAAA,EAAAA,KAACU,EAAc,CAAAX,UACbC,EAAAA,EAAAA,KAACW,EAAc,CACbwB,GAAE,WAAAC,OAAaF,EAAMG,IACrBC,MAAO,CAAEC,KAAMhB,GAAWxB,SAEzBmC,EAAMM,kBALUN,EAAMG,GAOV,QAM7B,C","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 200px;\n  outline: none;\n  padding: 5px;\n  border: 2px solid orangered;\n  border-radius: 6px;\n  font-size: 20px;\n`;\n\nexport const SearchButton = styled.button`\n  text-align: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  color: orangered;\n  border-radius: 6px;\n  border: 2px solid orangered;\n  background-color: white;\n  width: 120px;\n  margin-left: 15px;\n  font-size: 20px;\n\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  padding: 15px 0px;\n  padding-top: 5px;\n  border-bottom: 2px silid orangered;\n  width: 100%;\n  border-bottom: 1px solid orangered;\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchInput, SearchButton, SearchForm } from './SearchBox.styled';\n\nexport const SearchBox = ({ changeURL }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleSearchQuery = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    changeURL(searchQuery);\n\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search for movies\"\n        value={searchQuery}\n        onChange={handleSearchQuery}\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </SearchForm>\n  );\n};\n\nSearchBox.propTypes = {\n  changeURL: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  padding-left: 5px;\n  width: 300px;\n`;\n\nexport const MoviesListItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const MoviesListLink = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  display: block;\n  color: black;\n  border-radius: 6px;\n  border: 1px solid orangered;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover: not(.active) {\n    color: white;\n    background-color: orangered;\n  }\n`;","import { useState, useEffect } from 'react';\nimport { getMoviesByName } from '../../Services/GetMovies';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchBox } from '../../components/SearchBox/SearchBox';\nimport { MoviesList, MoviesListItem, MoviesListLink } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!queryName) {\n      setSearchedMovies([]);\n      return;\n    }\n\n    getMoviesByName(queryName).then(movies => {\n      setSearchedMovies(movies.data.results);\n    });\n  }, [queryName]);\n\n  const changeURL = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <div>\n      <SearchBox changeURL={changeURL} />\n      {searchedMovies.length > 0 && (\n        <MoviesList>\n          {searchedMovies.map(movie => (\n            <MoviesListItem key={movie.id}>\n              <MoviesListLink\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.original_title}\n              </MoviesListLink>\n            </MoviesListItem>\n          ))}\n        </MoviesList>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["SearchInput","styled","_templateObject","_taggedTemplateLiteral","SearchButton","_templateObject2","SearchForm","_templateObject3","SearchBox","_ref","changeURL","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_jsxs","onSubmit","event","preventDefault","trim","children","_jsx","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","MoviesList","MoviesListItem","MoviesListLink","NavLink","_searchParams$get","searchedMovies","setSearchedMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryName","get","location","useLocation","useEffect","getMoviesByName","then","movies","data","results","query","length","map","movie","to","concat","id","state","from","original_title"],"sourceRoot":""}